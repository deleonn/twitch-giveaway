{"version":3,"sources":["utils/theme.ts","utils/authContext.ts","UI/Header.tsx","UI/Loader.tsx","Pages/Dashboard/List.tsx","Pages/Dashboard/Picker.tsx","utils/api.ts","Pages/Dashboard/Home.tsx","Pages/Auth/LoginForm.tsx","Pages/Auth/Login.tsx","Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","colors","brand","900","800","700","initialState","isLoading","isLogged","currentUser","undefined","handleLogin","handleLogout","AuthContext","React","createContext","Header","useContext","w","alignItems","mb","size","color","as","username","colorScheme","onClick","Loader","h","justifyContent","thickness","speed","emptyColor","List","followers","total","isFetching","bg","p","direction","fontSize","overflowY","flex","length","map","el","Fragment","from_name","followed_at","labelOptions","Picker","useState","setIsLoading","isShowing","setIsShowing","currentLabel","setCurrentLabel","winner","setWinner","handleWinner","interval","counter","setInterval","clearInterval","chooseWinner","idx","Math","floor","random","disabled","in","textAlign","fontWeight","mt","api","axios","create","timeout","client_id","process","twitchAuthFlowURI","validateAuthToken","access_token","a","get","headers","Authorization","response","data","getFollowers","user_id","token","params","to_id","first","Home","setFollowers","setIsFetching","setTotal","useEffect","handleGetFollowers","LoginForm","useForm","handleSubmit","errors","formState","onSubmit","window","open","isInvalid","name","message","isSubmitting","type","leftIcon","Login","height","borderRadius","PrivateRoutes","path","component","HomePage","PublicRoutes","LoginPage","Router","App","setIsLogged","setCurrentUser","document","location","hash","match","substring","login","localStorage","setItem","authFlow","Provider","value","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.936db0c4.chunk.js","sourcesContent":["// 1. Import the extendTheme function\nimport { extendTheme } from \"@chakra-ui/react\";\n\n// 2. Extend the theme to include custom colors, fonts, etc\nconst colors = {\n  brand: {\n    900: \"#1a365d\",\n    800: \"#153e75\",\n    700: \"#2a69ac\",\n  },\n};\n\nexport const theme = extendTheme({ colors });\n","import React from \"react\";\n\nexport interface CurrentUser {\n  username: string;\n  user_id: string;\n  access_token: string;\n}\n\nexport interface AuthState {\n  isLoading: boolean;\n  isLogged: boolean;\n  currentUser: CurrentUser | undefined;\n  handleLogin?: () => void;\n  handleLogout?: () => void;\n}\n\nconst initialState: AuthState = {\n  isLoading: false,\n  isLogged: false,\n  currentUser: undefined,\n  handleLogin: () => {},\n  handleLogout: () => {},\n};\n\nexport const AuthContext = React.createContext(initialState);\n","import React, { useContext } from \"react\";\nimport { Box, Button, Flex, Heading, Spacer, Text } from \"@chakra-ui/react\";\nimport { AuthContext } from \"../utils/authContext\";\n\nexport default function Header() {\n  const { handleLogout, currentUser } = useContext(AuthContext);\n\n  return (\n    <Flex w=\"100%\" alignItems=\"flex-start\" mb={4}>\n      <Box>\n        <Heading size=\"md\">\n          Welcome,\n          <br />\n          <Text color=\"purple.300\" as=\"i\">\n            {currentUser?.username}\n          </Text>\n          <br />\n          to your followers giveaway! 🔥\n        </Heading>\n      </Box>\n      <Spacer />\n      <Box>\n        <Button colorScheme=\"red\" size=\"xs\" onClick={handleLogout}>\n          Log out\n        </Button>\n      </Box>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Flex, Spinner } from \"@chakra-ui/react\";\n\nexport default function Loader(): React.ReactElement {\n  return (\n    <Flex w=\"inherit\" h=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n      <Spinner\n        color=\"purple.500\"\n        size=\"xl\"\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n      />\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { Follower } from \"../../utils/api\";\nimport { Loader } from \"../../UI\";\n\ninterface Props {\n  followers: Array<Follower>;\n  total: number;\n  isFetching: boolean;\n}\n\nexport default function List({ followers, total, isFetching }: Props) {\n  return (\n    <Box h=\"100vh\" bg=\"gray.900\" w=\"300px\">\n      <Flex p={4} h=\"100%\" direction=\"column\">\n        {isFetching && <Loader />}\n        {!isFetching && (\n          <>\n            <Text color=\"white\" fontSize=\"xl\" mb={4}>\n              You have{\" \"}\n              <Text as=\"b\" color=\"purple.300\">\n                {total} followers\n              </Text>{\" \"}\n              {total > 0 ? \"❤️\" : \"😣\"}\n            </Text>\n            <Box overflowY=\"scroll\" flex=\"1\">\n              {followers.length &&\n                followers.map((el) => (\n                  <React.Fragment key={el.followed_at}>\n                    <Text color=\"white\">{el.from_name}</Text>\n                  </React.Fragment>\n                ))}\n            </Box>\n          </>\n        )}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Flex, Button, Fade, Text, Box } from \"@chakra-ui/react\";\nimport { Header } from \"../../UI\";\nimport { Follower } from \"../../utils/api\";\n\nconst labelOptions = [\n  \"Connecting to the private server...\",\n  \"Choosing the best follower...\",\n  \"Removing blacklisted users...\",\n  \"Computing results...\",\n];\n\ninterface Props {\n  followers: Array<Follower>;\n}\n\nexport default function Picker({ followers }: Props) {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [isShowing, setIsShowing] = React.useState<boolean>(false);\n  const [currentLabel, setCurrentLabel] = React.useState<string>(\n    labelOptions[0]\n  );\n  const [winner, setWinner] = React.useState<string>(\"\");\n\n  const handleWinner = () => {\n    setWinner(\"\");\n\n    let interval: any;\n    let counter = 0;\n\n    if (interval) {\n      return;\n    }\n\n    setIsShowing(true);\n    setIsLoading(true);\n    setCurrentLabel(labelOptions[0]);\n\n    interval = setInterval(() => {\n      if (counter <= labelOptions.length - 1) {\n        setCurrentLabel(labelOptions[counter]);\n        setIsShowing(false);\n        counter++;\n      } else {\n        setIsShowing(false);\n        setIsLoading(false);\n        setCurrentLabel(\"\");\n        clearInterval(interval);\n        interval = null;\n\n        chooseWinner();\n      }\n      setIsShowing(true);\n    }, 1000);\n  };\n\n  const chooseWinner = () => {\n    const idx = Math.floor(Math.random() * followers.length);\n    const winner = followers[idx];\n    setWinner(winner.from_name);\n  };\n\n  return (\n    <Flex p={4} direction=\"column\" flex={1}>\n      <Header />\n      <Flex\n        flex={1}\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {!winner && (\n          <>\n            <Button\n              size=\"lg\"\n              colorScheme=\"purple\"\n              isLoading={isLoading}\n              onClick={handleWinner}\n              mb={4}\n              disabled={!followers.length}\n            >\n              Choose a winner!\n            </Button>\n            <Fade in={isShowing}>\n              <Text color=\"purple.300\">{currentLabel}</Text>\n            </Fade>\n            <Text>{isShowing}</Text>\n          </>\n        )}\n\n        {winner && (\n          <Box textAlign=\"center\">\n            <Fade in={!!winner}>\n              <Text fontSize=\"4xl\">\n                And the winner is...{\" \"}\n                <Text as=\"span\" color=\"purple.600\" fontWeight=\"bold\">\n                  {winner}!\n                </Text>\n              </Text>\n              <Text fontSize=\"lg\" color=\"purple.400\" as=\"i\">\n                Ay!\n              </Text>\n            </Fade>\n\n            <Button\n              size=\"sm\"\n              colorScheme=\"purple\"\n              isLoading={isLoading}\n              onClick={handleWinner}\n              mt={4}\n            >\n              Re-roll?\n            </Button>\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  timeout: 10000,\n});\n\nconst client_id = process.env.REACT_APP_TWITCH_CLIENT_ID;\nconst redirect_uri = process.env.REACT_APP_TWITCH_REDIRECT_URI;\nconst response_type = \"token\";\nconst scope = \"channel:read:subscriptions user:read:email\";\n\nexport const twitchAuthFlowURI = `https://id.twitch.tv/oauth2/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=${response_type}&scope=${scope}`;\n\ninterface ValidateAuthTokenResponse {\n  client_id: string;\n  expires_in: number;\n  login: string;\n  scopes: Array<string>;\n  user_id: string;\n}\n\nexport const validateAuthToken = async (\n  access_token: string\n): Promise<ValidateAuthTokenResponse> => {\n  const response = await api.get(\"https://id.twitch.tv/oauth2/validate\", {\n    headers: {\n      Authorization: `OAuth ${access_token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport interface FollowersResponse {\n  total: number;\n  data: Array<Follower>;\n  pagination: {\n    cursor: string;\n  };\n}\n\nexport interface Follower {\n  from_id: string;\n  from_name: string;\n  to_id: string;\n  to_name: string;\n  followed_at: string;\n}\n\nexport const getFollowers = async (\n  user_id: string,\n  token: string\n): Promise<FollowersResponse> => {\n  const response = await api.get(\"https://api.twitch.tv/helix/users/follows\", {\n    params: {\n      to_id: user_id,\n      first: 100,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Client-Id\": client_id,\n    },\n  });\n\n  return response.data;\n};\n","import React, { useContext } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport List from \"./List\";\nimport Picker from \"./Picker\";\nimport { Follower, getFollowers } from \"../../utils/api\";\nimport { AuthContext } from \"../../utils/authContext\";\n\nfunction Home(): React.ReactElement {\n  const [followers, setFollowers] = React.useState<Array<Follower>>([]);\n  const [isFetching, setIsFetching] = React.useState<boolean>(true);\n  const [total, setTotal] = React.useState<any>(undefined);\n  const { currentUser } = useContext(AuthContext);\n\n  React.useEffect(() => {\n    handleGetFollowers();\n  }, []);\n\n  const handleGetFollowers = async () => {\n    const response = await getFollowers(\n      currentUser?.user_id!,\n      currentUser?.access_token!\n    );\n    setTotal(response.total);\n    setFollowers(response.data);\n    setIsFetching(false);\n  };\n\n  return (\n    <Flex>\n      <List followers={followers} total={total} isFetching={isFetching} />\n      <Picker followers={followers} />\n    </Flex>\n  );\n}\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormErrorMessage, FormControl, Button } from \"@chakra-ui/react\";\nimport { FaTwitch } from \"react-icons/fa\";\nimport { AuthContext } from \"../../utils/authContext\";\nimport { twitchAuthFlowURI } from \"../../utils/api\";\n\nexport default function LoginForm() {\n  const { handleSubmit, errors, formState } = useForm();\n\n  function onSubmit() {\n    window.open(twitchAuthFlowURI);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl isInvalid={errors.name}>\n        <FormErrorMessage>\n          {errors.name && errors.name.message}\n        </FormErrorMessage>\n      </FormControl>\n      <Button\n        mt={4}\n        colorScheme=\"purple\"\n        isLoading={formState.isSubmitting}\n        type=\"submit\"\n        w=\"100%\"\n        leftIcon={<FaTwitch />}\n      >\n        Sign in with Twitch\n      </Button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport LoginForm from \"./LoginForm\";\n\nfunction Login(): React.ReactElement {\n  return (\n    <Flex\n      bg={\"gray.900\"}\n      height=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box bg={\"white\"} w=\"400px\" p={4} borderRadius={5}>\n        <Text fontSize=\"3xl\">Sign in</Text>\n        <Text fontSize=\"sm\">\n          Give your followers something special ❤️ <br />\n          Use your twitch account to get started.\n        </Text>\n        <LoginForm />\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Login;\n","import { Box } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage, LoginPage } from \"../Pages\";\nimport { AuthContext } from \"../utils/authContext\";\nimport { Loader } from \"../UI\";\n\nconst PrivateRoutes = (\n  <Switch>\n    <Route path=\"/\" component={HomePage} />\n  </Switch>\n);\n\nconst PublicRoutes = (\n  <Switch>\n    <Route path=\"/\" component={LoginPage} />\n  </Switch>\n);\n\nfunction Router(): React.ReactElement {\n  const { isLogged, isLoading } = useContext(AuthContext);\n  return (\n    <BrowserRouter>\n      <Box>\n        {isLoading ? <Loader /> : isLogged ? PrivateRoutes : PublicRoutes}\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { theme } from \"./utils\";\nimport { AuthContext, CurrentUser } from \"./utils/authContext\";\nimport { Router } from \"./Router\";\nimport { validateAuthToken } from \"./utils/api\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [currentUser, setCurrentUser] = React.useState<CurrentUser | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    const access_token = document.location.hash.match(\n      /#access_token=([a-zA-Z0-9]*)/g\n    );\n\n    if (access_token?.length) {\n      const token = access_token![0].substring(14);\n\n      const authFlow = async () => {\n        const response = await validateAuthToken(token);\n\n        const { login: username, user_id } = response;\n\n        if (response) {\n          setCurrentUser({\n            user_id,\n            username,\n            access_token: token,\n          });\n          localStorage.setItem(\"access_token\", token);\n          return login();\n        }\n      };\n\n      authFlow();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = () => {\n    setIsLogged(true);\n    setIsLoading(false);\n    localStorage.setItem(\"is_logged\", \"true\");\n  };\n\n  const logout = () => {\n    setIsLogged(false);\n    localStorage.removeItem(\"is_logged\");\n    localStorage.removeItem(\"access_token\");\n    document.location.hash = \"\";\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        isLogged: isLogged,\n        isLoading: isLoading,\n        handleLogin: login,\n        handleLogout: logout,\n      }}\n    >\n      <ChakraProvider theme={theme}>\n        <Router />\n      </ChakraProvider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}