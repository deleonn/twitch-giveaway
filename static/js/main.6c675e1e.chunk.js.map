{"version":3,"sources":["utils/theme.ts","utils/authContext.ts","UI/Header.tsx","UI/Loader.tsx","Pages/Dashboard/List.tsx","Pages/Dashboard/Picker.tsx","utils/api.ts","Pages/Dashboard/Home.tsx","Pages/Auth/LoginForm.tsx","Pages/Auth/Login.tsx","Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","colors","brand","900","800","700","initialState","isLoading","isLogged","currentUser","undefined","handleLogin","handleLogout","AuthContext","React","createContext","Header","useContext","w","alignItems","mb","size","color","as","username","colorScheme","onClick","Loader","h","justifyContent","thickness","speed","emptyColor","List","followers","total","isFetching","handleFollowersChange","useState","computedFollowers","setComputedFollowers","useEffect","addCheckValueToEachFollower","computed","map","follower","checked","bg","p","direction","fontSize","overflowY","flex","style","display","flexDirection","htmlFor","marginBottom","type","id","e","target","handleCheckAll","defaultChecked","marginLeft","length","el","idx","from_name","onChange","handleCheckboxChange","followed_at","labelOptions","Picker","setIsLoading","isShowing","setIsShowing","currentLabel","setCurrentLabel","winner","setWinner","handleWinner","interval","counter","setInterval","clearInterval","chooseWinner","Math","floor","random","disabled","in","textAlign","fontWeight","mt","api","axios","create","timeout","client_id","process","twitchAuthFlowURI","validateAuthToken","access_token","a","get","headers","Authorization","response","data","getFollowers","user_id","token","cursor","params","to_id","first","after","tempFollowers","Home","setFollowers","setIsFetching","setTotal","handleGetFollowers","push","pagination","updatedFollowers","filter","f","LoginForm","useForm","handleSubmit","errors","formState","onSubmit","window","open","isInvalid","name","message","isSubmitting","leftIcon","Login","height","borderRadius","PrivateRoutes","path","component","HomePage","PublicRoutes","LoginPage","Router","App","setIsLogged","setCurrentUser","document","location","hash","match","substring","login","localStorage","setItem","authFlow","Provider","value","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c675e1e.chunk.js","sourcesContent":["// 1. Import the extendTheme function\nimport { extendTheme } from \"@chakra-ui/react\";\n\n// 2. Extend the theme to include custom colors, fonts, etc\nconst colors = {\n  brand: {\n    900: \"#1a365d\",\n    800: \"#153e75\",\n    700: \"#2a69ac\",\n  },\n};\n\nexport const theme = extendTheme({ colors });\n","import React from \"react\";\n\nexport interface CurrentUser {\n  username: string;\n  user_id: string;\n  access_token: string;\n}\n\nexport interface AuthState {\n  isLoading: boolean;\n  isLogged: boolean;\n  currentUser: CurrentUser | undefined;\n  handleLogin?: () => void;\n  handleLogout?: () => void;\n}\n\nconst initialState: AuthState = {\n  isLoading: false,\n  isLogged: false,\n  currentUser: undefined,\n  handleLogin: () => {},\n  handleLogout: () => {},\n};\n\nexport const AuthContext = React.createContext(initialState);\n","import React, { useContext } from \"react\";\nimport { Box, Button, Flex, Heading, Spacer, Text } from \"@chakra-ui/react\";\nimport { AuthContext } from \"../utils/authContext\";\n\nexport default function Header() {\n  const { handleLogout, currentUser } = useContext(AuthContext);\n\n  return (\n    <Flex w=\"100%\" alignItems=\"flex-start\" mb={4}>\n      <Box>\n        <Heading size=\"md\">\n          Welcome,\n          <br />\n          <Text color=\"purple.300\" as=\"i\">\n            {currentUser?.username}\n          </Text>\n          <br />\n          to your followers giveaway! 🔥\n        </Heading>\n      </Box>\n      <Spacer />\n      <Box>\n        <Button colorScheme=\"red\" size=\"xs\" onClick={handleLogout}>\n          Log out\n        </Button>\n      </Box>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Flex, Spinner } from \"@chakra-ui/react\";\n\nexport default function Loader(): React.ReactElement {\n  return (\n    <Flex w=\"inherit\" h=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n      <Spinner\n        color=\"purple.500\"\n        size=\"xl\"\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n      />\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { Follower } from \"../../utils/api\";\nimport { Loader } from \"../../UI\";\n\ninterface Props {\n  followers: Array<Follower>;\n  total: number;\n  isFetching: boolean;\n  handleFollowersChange: (followers: Array<Follower>) => void;\n}\n\nexport default function List({\n  followers,\n  total,\n  isFetching,\n  handleFollowersChange,\n}: Props) {\n  const [computedFollowers, setComputedFollowers] = React.useState<\n    Array<Follower>\n  >([]);\n\n  React.useEffect(() => {\n    return addCheckValueToEachFollower();\n  }, [followers]);\n\n  React.useEffect(() => {\n    handleFollowersChange(computedFollowers);\n  }, [computedFollowers]);\n\n  const addCheckValueToEachFollower = () => {\n    const computed = followers!.map((follower) => ({\n      ...follower,\n      checked: true,\n    }));\n    setComputedFollowers(computed);\n  };\n\n  const handleCheckAll = (\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\n  ) => {\n    const computed = computedFollowers.map((follower) => ({\n      ...follower,\n      checked: (e.target as HTMLInputElement).checked,\n    }));\n\n    setComputedFollowers(computed);\n  };\n\n  const handleCheckboxChange = (idx: number) => {\n    const computed = [...computedFollowers];\n    computed[idx].checked = !computed[idx].checked;\n\n    setComputedFollowers(computed);\n  };\n\n  return (\n    <Box h=\"100vh\" bg=\"gray.900\" w=\"300px\">\n      <Flex p={4} h=\"100%\" direction=\"column\">\n        {isFetching && <Loader />}\n        {!isFetching && (\n          <>\n            <Text color=\"white\" fontSize=\"xl\" mb={4}>\n              You have{\" \"}\n              <Text as=\"b\" color=\"purple.300\">\n                {total} followers\n              </Text>{\" \"}\n              {total > 0 ? \"❤️\" : \"😣\"}\n            </Text>\n            <Box overflowY=\"scroll\" flex=\"1\">\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <label\n                  htmlFor=\"checkAll\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginBottom: \"0.5rem\",\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    id=\"Check All\"\n                    onClick={(e) => handleCheckAll(e)}\n                    defaultChecked={true}\n                  />\n                  <Text color=\"white\" style={{ marginLeft: \"0.5rem\" }}>\n                    Check All\n                  </Text>\n                </label>\n              </div>\n              {computedFollowers.length &&\n                computedFollowers.map((el, idx) => (\n                  <div\n                    key={el.followed_at}\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\n                  >\n                    <label\n                      htmlFor={el.from_name}\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        marginBottom: \"0.5rem\",\n                      }}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={el.from_name}\n                        checked={el.checked}\n                        onChange={() => handleCheckboxChange(idx)}\n                      />\n                      <Text color=\"white\" style={{ marginLeft: \"0.5rem\" }}>\n                        {el.from_name}\n                      </Text>\n                    </label>\n                  </div>\n                ))}\n            </Box>\n          </>\n        )}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Flex, Button, Fade, Text, Box } from \"@chakra-ui/react\";\nimport { Header } from \"../../UI\";\nimport { Follower } from \"../../utils/api\";\n\nconst labelOptions = [\n  \"Choosing the best follower...\",\n  \"Removing blacklisted users...\",\n  \"Ay...\",\n];\n\ninterface Props {\n  followers: Array<Follower>;\n}\n\nexport default function Picker({ followers }: Props) {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [isShowing, setIsShowing] = React.useState<boolean>(false);\n  const [currentLabel, setCurrentLabel] = React.useState<string>(\n    labelOptions[0]\n  );\n  const [winner, setWinner] = React.useState<string>(\"\");\n\n  const handleWinner = () => {\n    setWinner(\"\");\n\n    let interval: any;\n    let counter = 0;\n\n    if (interval) {\n      return;\n    }\n\n    setIsShowing(true);\n    setIsLoading(true);\n    setCurrentLabel(labelOptions[0]);\n\n    interval = setInterval(() => {\n      if (counter <= labelOptions.length - 1) {\n        setCurrentLabel(labelOptions[counter]);\n        setIsShowing(false);\n        counter++;\n      } else {\n        setIsShowing(false);\n        setIsLoading(false);\n        setCurrentLabel(\"\");\n        clearInterval(interval);\n        interval = null;\n\n        chooseWinner();\n      }\n      setIsShowing(true);\n    }, 500);\n  };\n\n  const chooseWinner = () => {\n    const idx = Math.floor(Math.random() * followers.length);\n    const winner = followers[idx];\n    setWinner(winner.from_name);\n  };\n\n  return (\n    <Flex p={4} direction=\"column\" flex={1}>\n      <Header />\n      <Flex\n        flex={1}\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {!winner && (\n          <>\n            <Button\n              size=\"lg\"\n              colorScheme=\"purple\"\n              isLoading={isLoading}\n              onClick={handleWinner}\n              mb={4}\n              disabled={!followers.length || isLoading}\n            >\n              Choose a winner!\n            </Button>\n            <Fade in={isShowing}>\n              <Text color=\"purple.300\">{currentLabel}</Text>\n            </Fade>\n            <Text>{isShowing}</Text>\n          </>\n        )}\n\n        {winner && (\n          <Box textAlign=\"center\">\n            <Fade in={!!winner}>\n              <Text fontSize=\"4xl\">\n                And the winner is...{\" \"}\n                <Text as=\"span\" color=\"purple.600\" fontWeight=\"bold\">\n                  {winner}!\n                </Text>\n              </Text>\n              <Text fontSize=\"lg\" color=\"purple.400\" as=\"i\">\n                Ay!\n              </Text>\n            </Fade>\n\n            <Button\n              size=\"sm\"\n              colorScheme=\"purple\"\n              isLoading={isLoading}\n              onClick={handleWinner}\n              mt={4}\n              disabled={!followers.length || isLoading}\n            >\n              Re-roll?\n            </Button>\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  timeout: 10000,\n});\n\nconst client_id = process.env.REACT_APP_TWITCH_CLIENT_ID;\nconst redirect_uri = process.env.REACT_APP_TWITCH_REDIRECT_URI;\nconst response_type = \"token\";\nconst scope = \"channel:read:subscriptions user:read:email\";\n\nexport const twitchAuthFlowURI = `https://id.twitch.tv/oauth2/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=${response_type}&scope=${scope}`;\n\ninterface ValidateAuthTokenResponse {\n  client_id: string;\n  expires_in: number;\n  login: string;\n  scopes: Array<string>;\n  user_id: string;\n}\n\nexport const validateAuthToken = async (\n  access_token: string\n): Promise<ValidateAuthTokenResponse> => {\n  const response = await api.get(\"https://id.twitch.tv/oauth2/validate\", {\n    headers: {\n      Authorization: `OAuth ${access_token}`,\n    },\n  });\n\n  return response.data;\n};\n\nexport interface FollowersResponse {\n  total: number;\n  data: Array<Follower>;\n  pagination: {\n    cursor: string;\n  };\n}\n\nexport interface Follower {\n  from_id: string;\n  from_name: string;\n  to_id: string;\n  to_name: string;\n  followed_at: string;\n  checked?: boolean;\n}\n\nexport const getFollowers = async (\n  user_id: string,\n  token: string,\n  cursor?: string,\n): Promise<FollowersResponse> => {\n  const response = await api.get(\"https://api.twitch.tv/helix/users/follows\", {\n    params: {\n      to_id: user_id,\n      first: 100,\n      after: cursor\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Client-Id\": client_id,\n    },\n  });\n\n  return response.data;\n};\n","import React, { useContext } from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport List from \"./List\";\nimport Picker from \"./Picker\";\nimport { Follower, getFollowers } from \"../../utils/api\";\nimport { AuthContext } from \"../../utils/authContext\";\n\nconst tempFollowers: any[] = [];\n\nfunction Home(): React.ReactElement {\n  const [followers, setFollowers] = React.useState<Array<Follower>>([]);\n  const [computedFollowers, setComputedFollowers] = React.useState<\n    Array<Follower>\n  >([]);\n  const [isFetching, setIsFetching] = React.useState<boolean>(true);\n  const [total, setTotal] = React.useState<any>(undefined);\n  const { currentUser } = useContext(AuthContext);\n\n  React.useEffect(() => {\n    handleGetFollowers();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleGetFollowers = async (cursor?: string): Promise<void> => {\n    const response = await getFollowers(\n      currentUser?.user_id!,\n      currentUser?.access_token!,\n      cursor\n    );\n\n    tempFollowers.push(...response.data);\n\n    if (response.pagination.cursor) {\n      return handleGetFollowers(response.pagination.cursor);\n    } else {\n      setTotal(response.total);\n      setIsFetching(false);\n      setFollowers(tempFollowers);\n    }\n  };\n\n  const followersChanged = (updatedFollowers: Array<Follower>) => {\n    setComputedFollowers(updatedFollowers.filter((f) => f.checked === true));\n  };\n\n  return (\n    <Flex>\n      <List\n        followers={followers}\n        total={total}\n        isFetching={isFetching}\n        handleFollowersChange={followersChanged}\n      />\n      <Picker followers={computedFollowers} />\n    </Flex>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormErrorMessage, FormControl, Button } from \"@chakra-ui/react\";\nimport { FaTwitch } from \"react-icons/fa\";\nimport { twitchAuthFlowURI } from \"../../utils/api\";\n\nexport default function LoginForm() {\n  const { handleSubmit, errors, formState } = useForm();\n\n  function onSubmit() {\n    window.open(twitchAuthFlowURI, \"_self\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl isInvalid={errors.name}>\n        <FormErrorMessage>\n          {errors.name && errors.name.message}\n        </FormErrorMessage>\n      </FormControl>\n      <Button\n        mt={4}\n        colorScheme=\"purple\"\n        isLoading={formState.isSubmitting}\n        type=\"submit\"\n        w=\"100%\"\n        leftIcon={<FaTwitch />}\n      >\n        Sign in with Twitch\n      </Button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport LoginForm from \"./LoginForm\";\n\nfunction Login(): React.ReactElement {\n  return (\n    <Flex\n      bg={\"gray.900\"}\n      height=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box bg={\"white\"} w=\"400px\" p={4} borderRadius={5}>\n        <Text fontSize=\"3xl\">Sign in</Text>\n        <Text fontSize=\"sm\">\n          Give your followers something special ❤️ <br />\n          Use your twitch account to get started.\n        </Text>\n        <LoginForm />\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Login;\n","import { Box } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage, LoginPage } from \"../Pages\";\nimport { AuthContext } from \"../utils/authContext\";\nimport { Loader } from \"../UI\";\n\nconst PrivateRoutes = (\n  <Switch>\n    <Route path=\"/\" component={HomePage} />\n  </Switch>\n);\n\nconst PublicRoutes = (\n  <Switch>\n    <Route path=\"/\" component={LoginPage} />\n  </Switch>\n);\n\nfunction Router(): React.ReactElement {\n  const { isLogged, isLoading } = useContext(AuthContext);\n  return (\n    <BrowserRouter>\n      <Box>\n        {isLoading ? <Loader /> : isLogged ? PrivateRoutes : PublicRoutes}\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { theme } from \"./utils\";\nimport { AuthContext, CurrentUser } from \"./utils/authContext\";\nimport { Router } from \"./Router\";\nimport { validateAuthToken } from \"./utils/api\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [currentUser, setCurrentUser] = React.useState<CurrentUser | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    const access_token = document.location.hash.match(\n      /#access_token=([a-zA-Z0-9]*)/g\n    );\n\n    if (access_token?.length) {\n      const token = access_token![0].substring(14);\n\n      const authFlow = async () => {\n        const response = await validateAuthToken(token);\n\n        const { login: username, user_id } = response;\n\n        if (response) {\n          setCurrentUser({\n            user_id,\n            username,\n            access_token: token,\n          });\n          localStorage.setItem(\"access_token\", token);\n          return login();\n        }\n      };\n\n      authFlow();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = () => {\n    setIsLogged(true);\n    setIsLoading(false);\n    localStorage.setItem(\"is_logged\", \"true\");\n  };\n\n  const logout = () => {\n    setIsLogged(false);\n    localStorage.removeItem(\"is_logged\");\n    localStorage.removeItem(\"access_token\");\n    document.location.hash = \"\";\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        isLogged: isLogged,\n        isLoading: isLoading,\n        handleLogin: login,\n        handleLogout: logout,\n      }}\n    >\n      <ChakraProvider theme={theme}>\n        <Router />\n      </ChakraProvider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}